<?xml version="1.0" encoding="utf-8"?>

<csxs:CSXSWindowedApplication 
	xmlns:csxs="com.adobe.csxs.core.*" 
	xmlns:mx="http://www.adobe.com/2006/mxml" 
	layout="absolute" 
	width="240" minWidth="240"
	height="210" 
	historyManagementEnabled="false"
	close="onClose()"
	showStatusBar="false"
	backgroundColor="0xD6D6D6"
	usePreloader="false" backgroundAlpha="0"
	color="0x000000"
	creationComplete="onCreationComplete()"
	applicationComplete="onApplicationComplete()" 
	horizontalScrollPolicy="off"
	>
	
	<!-- 	backgroundColor="0xD6D6D6" -->	
	
	<mx:Script>
		<![CDATA[
			import com.adobe.csawlib.illustrator.Illustrator;
			import com.adobe.illustrator.*;
			
			import flash.filesystem.File;
			
			import managers.*;
			
			import mx.collections.ArrayCollection;
			import mx.controls.ToolTip;
			import mx.events.AIREvent;
			import mx.events.DataGridEvent;
			import mx.events.FlexEvent;
			import mx.events.ListEvent;
			import mx.managers.ToolTipManager;
			
			[Bindable]
			private var model:AppModel = null; 
			private var controller:AppController = null;
			private var watcher:AppLifeCycle = null;
			
			
			
			private function onCreationComplete():void{
				trace('onCreationComplete');
						
			}
			
			private function onApplicationComplete():void{
				model = AppModel.getInstance();	
				model.readyState();
				trace('ononApplicationComplete');
				formatNamesCB.selectedIndex = 2;
				//pathInput.horizontalScrollPosition = 100;
				controller = AppController.getInstance();
				watcher = AppLifeCycle.getInstance();
				
				
				ToolTipManager.showDelay = 1000;
				ToolTipManager.hideDelay = 10000;
//				ToolTipManager.scrubDelay = 100;
			}
			
			private function onClose():void{
				controller.detach();
			}			
			
			private function pathInput_changeHandler(event:Event):void
			{
				model.pathToPublish = pathInput.text;
				//				pathInput.horizontalScrollPosition = pathInput.maxHorizontalScrollPosition;
			}
			
			// Вызывается как-то часто по событию ValueCommit. 
			// Нужно апдейтить по изменению selectedIndex
			private function formatNamesCB_changeHandler(event:Event):void
			{
				model.formatName = formatNamesCB.selectedItem.label;				
			}
			
			protected function fileListDG_itemClickHandler(event:ListEvent):void
			{
				saveButton.enabled = true;
			}
			
			protected function fileListDG_itemDoubleClickHandler(event:ListEvent):void
			{
				controller.changeCompositionToIndex(event.rowIndex);
				saveButton.enabled = true;
			}
			
			protected function button1_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				controller.newFile();
				controller.changeCompositionToLastCreated();
				fileListDG.selectedIndex = model.dataGridProvider.length - 1;
			}
			
			protected function fileListDG_itemFocusOutHandler(event:DataGridEvent):void
			{
				// TODO Auto-generated method stub
//				controller.restoreComposition();
				saveButton.enabled = false;
			}
			
			public function hyphenate(item:Object, column:DataGridColumn):String {
				var title: String  = item[column.dataField].toString();
				if (column.width  < column.minWidth * 1.2) {
					return "..."  + title.substr(-14);					
				} 
				return title;
				
			}
			
			protected function csxswindowedapplication1_focusOutHandler(event:FocusEvent):void
			{
				// TODO Auto-generated method stub
				saveButton.enabled = false;
//				fileListDG.selectedIndex = -1;
			}
			
			protected function csxswindowedapplication1_applicationActivateHandler(event:AIREvent):void
			{
				// TODO Auto-generated method stub
				trace("activate");
			}
			
		]]>
	</mx:Script>
	
	<mx:Style source="assets/css/style.css" />
	<!--
	0. автоматически создавать нужный путь и папки.
	
	1 Отслеживать событие изменения activeDocument
	
	2. Добавлять файлы, на основе артбоардов сохраняющие список включенных слоев.
	3. Отслежитьва события изменения слоев (удаление, добавление, сохранение).
	3. по двойному клику показывать сохраненные переключения слоев
	4. сохранять настройки и список файлов для каждого иллюстраторского файла. 
	(если артборды и слои поменяли в другом иллюстраторе нужно иконкой показать, что сбились настройки)
	5. сохранять путь сохранения файла для этого исходника
	
	6. Возможность скрывать файлы от публикации
	
	6. Бонусы:
	1. Если в названии артбоардов использовали цифры, убрать их?
	2. если были некорректные символы, съедать их.
	3. Если поменялось оформление интерфейса приложения через настройки, отловить событие и подменить скин.	
	-->
	
	
	<!--		<mx:Label text="FILES TO PUBLISH" width="100%" fontWeight="bold" fontSize="9" 
	textAlign="center" condenseWhite="false"
	paddingBottom="-3" paddingTop="3"/> -->
	<mx:Canvas backgroundColor="0xD6D6D6" width="100%" height="100%" />

	
	
	
	<mx:VBox width="100%" verticalGap="3" backgroundColor="0xD6D6D6" height="100%">
		
		<mx:DataGrid id="fileListDG" top="6" width="100%" backgroundAlpha="0.0" borderStyle="none" 
					 dataProvider="{model.dataGridProvider}"
					 selectionColor="0x3399FF" 
					 rollOverColor="0xE0E0E0" 
					 textSelectedColor="0xFFFFFF" 
					 horizontalGridLineColor="0x999999"
					 verticalGridLineColor="0xB2B2B2"
					 horizontalGridLines="true"
					 selectionDuration="0"
					 verticalGridLines="false" 
					 resizableColumns="true"
					 showHeaders="false"
					 rowCount="{model.dataGridProvider.length}"
					 itemClick="fileListDG_itemClickHandler(event)"
					 itemDoubleClick="fileListDG_itemDoubleClickHandler(event)"
					 itemFocusOut="fileListDG_itemFocusOutHandler(event)"
					 doubleClickEnabled="true"
					 editable="true"
					 height="100%"
					 >
			<mx:columns>
				<mx:DataGridColumn editable="false" dataField="isPublished" headerText="" width="18">
					<mx:itemRenderer > 
						<mx:Component> 
							<mx:Box paddingLeft="3">
								<mx:CheckBox fillColors="0xFFFFFF 0xFFFFFF" highlightAlphas="0, 0" borderColor="0xA0A0A0" 
									selected="{data.isPublished}" click="data.isPublished=!data.isPublished"/>
							</mx:Box>
						</mx:Component>                         
					</mx:itemRenderer> 
				</mx:DataGridColumn>
				<mx:DataGridColumn editable="false" dataField="artboardName" headerText="Artboard" labelFunction="hyphenate"/>
				<mx:DataGridColumn editable="true" dataTipField="filename" dataField="filename" headerText="Output Filename" />
				<mx:DataGridColumn editable="false" dataField="dimensionsString" headerText="Dimensions"  labelFunction="hyphenate" />
			</mx:columns>
		</mx:DataGrid>
		
		<mx:HRule width="100%" strokeColor="0x999999" shadowColor="0xCCCCCC" />
		
		<mx:VBox width="100%">
			<!--			<mx:HBox width="100%" paddingTop="6" >
			<mx:Label fontWeight="bold" text="Path" />
			<mx:Spacer width="100%"/>
			<mx:Label id="version" text="v." textAlign="right"/>
			</mx:HBox>	
			-->
			<mx:TextInput id="pathInput" width="100%" height="20" fontSize="9"
						  text="{model.pathToPublish}"
						  horizontalScrollPosition="{pathInput.maxHorizontalScrollPosition}"
						  change="pathInput_changeHandler(event)"/>
			<mx:HBox width="100%">
				<mx:ComboBox id="formatNamesCB" width="80" dataProvider="{model.formatNames}" 
							 change="formatNamesCB_changeHandler(event)"
							 valueCommit="formatNamesCB_changeHandler(event)"/>			
				
				<!--<mx:CheckBox label="Transparency" selected="true" fontSize="9"
							 horizontalGap="1"/>-->		
			</mx:HBox>
		</mx:VBox>		
		
		<mx:HRule width="100%" strokeColor="0x000000" strokeWidth="1"/>
		
		<mx:HBox width="100%" horizontalGap="2" paddingBottom="1">
			<mx:Button label="Publish" width="30" height="16" toolTip="Publish assets" click="controller.export()"/>
			<mx:Spacer width="100%" />
			<mx:Button id="saveButton" label="Save" width="30" height="16" toolTip="Save current composition to selected asset"
					   click="controller.updateNthAssetWithCurrentComposition(fileListDG.selectedIndex)"/>
			<mx:Button toolTip="New File"
					   click="button1_clickHandler(event)"
					   upSkin="@Embed(source='assets/icons/new.png')"
					   overSkin="@Embed(source='assets/icons/new_over.png')"
					   downSkin="@Embed(source='assets/icons/new_down.png')"
					   disabledSkin="@Embed(source='assets/icons/new_disabled.png')"/>
			<mx:Button toolTip="Delete File"
					   enabled="{model.dataGridProvider.length > 0}"
					   click="controller.deleteSelectedFile(fileListDG.selectedItem, fileListDG.selectedIndex)"
					   upSkin="@Embed(source='assets/icons/delete.png')"
					   overSkin="@Embed(source='assets/icons/delete_over.png')"
					   downSkin="@Embed(source='assets/icons/delete_down.png')"
					   disabledSkin="@Embed(source='assets/icons/delete_disabled.png')"/>
			
		</mx:HBox>
	</mx:VBox>
	
</csxs:CSXSWindowedApplication>